/*               58 KEY MATRIX / LAYOUT MAPPING
  ╭─────────────────────────────┬─────────────────────────────╮
  │ LT5 LT4 LT3 LT2 LT1 LT0     │     RT0 RT1 RT2 RT3 RT4 RT5 │
  │ LM5 LM4 LM3 LM2 LM1 LM0     │     RM0 RM1 RM2 RM3 RM4 RM5 │
  │ LB5 LB4 LB3 LB2 LB1 LB0     │     RB0 RB1 RB2 RB3 RB4 RB5 │
  │ LF5 LF4 LF3 LF2 LF1 LF0 LEC │ REC RF0 RF1 RF2 RF3 RF4 RF5 │
  ╰───────────╮ LH3 LH2 LH1 LH0 │ RH0 RH1 RH2 RH3 ╭───────────╯
              ╰─────────────────┴─────────────────╯             */

/*
 * maps to `timeout-ms`
 * Keys must be both pressed within this time
 *
 * if too slow = false positives in rolls
 * if too fast = types out both letters instead
 */
#define COMBO_TERM_FAST 20
#define COMBO_TERM_SLOW 60

/**
 * maps to `require-prior-idle-ms`
 * Must have no keys outside the combo pressed in this time before it
 *
 * if too slow = combo doesn't trigger when needed
 * if too fast = combo will trigger in normal typing
 */
#define COMBO_IDLE_FAST 170
#define COMBO_IDLE_SLOW 50

// Caps
//        name,     combo_bindings, keypos,   combo_layers,      timeout-ms,       require-prior-idle-ms
ZMK_COMBO(capsword, &caps_word,     LB1 RB1,  BASE        , COMBO_TERM_FAST,  COMBO_IDLE_FAST)
ZMK_COMBO(capslock, &kp CAPSLOCK,   LB2 RB2,  BASE        , COMBO_TERM_FAST,  COMBO_IDLE_FAST)
ZMK_COMBO(sk_shft, &sk LSHFT,       LB3 RB3,  BASE        , COMBO_TERM_FAST,  COMBO_IDLE_FAST)

// Left side
// top row undo, redo, select all
ZMK_COMBO(s_all, &kp LC(A),     LM3 LM1,      BASE NAV    , COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(undo,  &kp LC(Z),     LM3 LM2,      BASE NAV    , COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(redo,  &kp LC(LS(Z)), LM2 LM1,      BASE NAV    , COMBO_TERM_FAST, COMBO_IDLE_FAST)

// home row tab/esc
ZMK_COMBO(tab,  &tab,         LB1 LB2,        BASE NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST, LS(LGUI),    KEYS_R)
ZMK_COMBO(esc,  &esc,         LB2 LB3,        BASE NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST, LS(LCTRL),   KEYS_R)

// bottom row cut/copy/paste
ZMK_COMBO(cut,   &kp LC(X),     LF3 LF1,      BASE NAV    , COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(copy,  &kp LC(C),     LF3 LF2,      BASE NAV    , COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(paste, &kp LC(V),     LF2 LF1,      BASE NAV    , COMBO_TERM_FAST, COMBO_IDLE_FAST)

// Homerow same side combos, 8 arg version
// Second arg needs to be a behavior - not a &kp binding
// right side
// top row {}
ZMK_COMBO(lbrc,  &kp LBRC,      RM1 RM2,      BASE NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(rbrc,  &kp RBRC,      RM2 RM3,      BASE NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)

// home row ()
ZMK_COMBO(lpar,  &lpar_lt,      RB1 RB2,      BASE NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST, RS(RGUI),    KEYS_L)
ZMK_COMBO(rpar,  &rpar_gt,      RB2 RB3,      BASE NAV NUM      , COMBO_TERM_FAST, COMBO_IDLE_FAST, RS(RCTRL),   KEYS_L)

// bottom row []
ZMK_COMBO(lbkt,  &kp LBKT,      RF1 RF2,      BASE NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(rbkt,  &kp RBKT,      RF2 RF3,      BASE NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)


/* Vertical combos - left hand */
// middle-top @ # $ %
ZMK_COMBO(at,    &kp AT,        LB3 LM3,      BASE NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(hash,  &kp HASH,      LB2 LM2,      BASE NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(dllr,  &kp DLLR,      LB1 LM1,      BASE NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(prcnt, &kp PRCNT,     LB0 LM0,      BASE NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)

// middle-bottom 
ZMK_COMBO(grave, &kp GRAVE,     LF3 LB3,      BASE NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(bslsh, &kp BSLH,      LF2 LB2,      BASE NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(equal, &kp EQUAL,     LF1 LB1,      BASE NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(tilde, &kp TILDE,     LF0 LB0,      BASE NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)

/* Vertical combos - right hand */
// middle-top
ZMK_COMBO(caret, &kp CARET,     RB0 RM0,      BASE NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(amps,  &kp AMPS,      RB1 RM1,      BASE NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(star,  &kp STAR,      RB2 RM2,      BASE NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(plus,  &kp PLUS,      RB3 RM3,      BASE NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)

// middle-bottom
ZMK_COMBO(under, &kp UNDER,     RF0 RB0,      BASE NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(pipe,  &kp PIPE,      RF1 RB1,      BASE NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(fslh,  &kp FSLH,      RF2 RB2,      BASE NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(minus, &kp MINUS,     RF3 RB3,      BASE NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
