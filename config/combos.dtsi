/*               58 KEY MATRIX / LAYOUT MAPPING
  ╭─────────────────────────────┬─────────────────────────────╮
  │ LT5 LT4 LT3 LT2 LT1 LT0     │     RT0 RT1 RT2 RT3 RT4 RT5 │
  │ LM5 LM4 LM3 LM2 LM1 LM0     │     RM0 RM1 RM2 RM3 RM4 RM5 │
  │ LB5 LB4 LB3 LB2 LB1 LB0     │     RB0 RB1 RB2 RB3 RB4 RB5 │
  │ LF5 LF4 LF3 LF2 LF1 LF0 LEC │ REC RF0 RF1 RF2 RF3 RF4 RF5 │
  ╰───────────╮ LH3 LH2 LH1 LH0 │ RH0 RH1 RH2 RH3 ╭───────────╯
              ╰─────────────────┴─────────────────╯             */

/*
 * maps to `timeout-ms`
 * Keys must be both pressed within this time
 *
 * if too slow = false positives in rolls
 * if too fast = types out both letters instead
 */
#define COMBO_TERM_FAST 25
#define COMBO_TERM_SLOW 35

/**
 * maps to `require-prior-idle-ms`
 * Must have no keys outside the combo pressed in this time before it
 *
 * if too slow = mod doesn't trigger when needed
 * if too fast = mod will trigger in normal typing
 */
#define COMBO_IDLE_FAST 150
#define COMBO_IDLE_SLOW 50

// Caps
//        name,       combo_bindings,   keypos,     combo_layers,   timeout-ms,       require-prior-idle-ms
ZMK_COMBO(capsword,   &caps_word,       LB1 RB1,    BASE,           COMBO_TERM_FAST,  COMBO_IDLE_FAST)
ZMK_COMBO(capslock,   &kp CAPSLOCK,     LB2 RB2,    BASE,           COMBO_TERM_FAST,  COMBO_IDLE_FAST)

// Define "behaviors" for HRM chord 
ZMK_BEHAVIOR(lpar, tap_dance, 
  // Should never trigger
  tapping-term-ms = <0>;
  bindings = <&kp LPAR>;
)

ZMK_BEHAVIOR(lbkt, tap_dance, 
  // Should never trigger
  tapping-term-ms = <0>;
  bindings = <&kp LBKT>;
)

ZMK_BEHAVIOR(lbrc, tap_dance, 
  // Should never trigger
  tapping-term-ms = <0>;
  bindings = <&kp LS(LBKT)>;
)

ZMK_BEHAVIOR(rpar, tap_dance, 
  // Should never trigger
  tapping-term-ms = <0>;
  bindings = <&kp RPAR>;
)

ZMK_BEHAVIOR(rbkt, tap_dance, 
  // Should never trigger
  tapping-term-ms = <0>;
  bindings = <&kp RBKT>;
)

ZMK_BEHAVIOR(rbrc, tap_dance, 
  // Should never trigger
  tapping-term-ms = <0>;
  bindings = <&kp RS(RBKT)>;
)

// Homerow same side combos, 8 arg version
// Second arg needs to be a behavior - not a &kp binding
// Left side
ZMK_COMBO(parens_open,  &lpar,  LB1 LB2,    BASE, COMBO_TERM_FAST,  COMBO_IDLE_FAST,  LS(LGUI),  KEYS_R)
ZMK_COMBO(square_open,  &lbkt,  LB2 LB3,    BASE, COMBO_TERM_FAST,  COMBO_IDLE_FAST,  LG(LCTRL), KEYS_R)
ZMK_COMBO(curly_open,   &lbrc,  LB3 LB4,    BASE, COMBO_TERM_FAST,  COMBO_IDLE_FAST,  LC(LALT),  KEYS_R)

// Right side
ZMK_COMBO(parens_close,  &rpar,  RB1 RB2,    BASE, COMBO_TERM_FAST,  COMBO_IDLE_FAST,  RS(RGUI),  KEYS_L)
ZMK_COMBO(square_close,  &rbkt,  RB2 RB3,    BASE, COMBO_TERM_FAST,  COMBO_IDLE_FAST,  RG(RCTRL), KEYS_L)
ZMK_COMBO(curly_close,   &rbrc,  RB3 RB4,    BASE, COMBO_TERM_FAST,  COMBO_IDLE_FAST,  RC(RALT),  KEYS_L)

/* Vertical combos - left hand */
ZMK_COMBO(at,    &kp AT,       LB3 LM3,     BASE, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(hash,  &kp HASH,     LB2 LM2,     BASE, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(dllr,  &kp DLLR,     LB1 LM1,     BASE, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(prcnt, &kp PRCNT,    LB0 LM0,     BASE, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)

ZMK_COMBO(grave, &kp GRAVE,    LF3 LB3,     BASE, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(bslh,  &kp BSLH,     LF2 LB2,     BASE, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(equal, &kp EQUAL,    LF1 LB1,     BASE, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(tilde, &kp TILDE,    LF0 LB0,     BASE, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)

/* Vertical combos - right hand */
ZMK_COMBO(caret, &kp CARET,    RB0 RM0,     BASE, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(plus,  &kp PLUS,     RB1 RM1,     BASE, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(star,  &kp STAR,     RB2 RM2,     BASE, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(amps,  &kp AMPS,     RB3 RM3,     BASE, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)

ZMK_COMBO(under, &kp UNDER,    RF0 RB0,     BASE, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(minus, &kp MINUS,    RF1 RB1,     BASE, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(fslh,  &kp FSLH,     RF2 RB2,     BASE, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(pipe,  &kp PIPE,     RF3 RB3,     BASE, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)