#define SIMPLE_MORPH(NAME, MOD, BINDING1, BINDING2) \
    ZMK_MOD_MORPH(NAME, \
        mods = <(MOD_L ## MOD|MOD_R ## MOD)>; \
        bindings = <BINDING1>, <BINDING2>; \
    )

// tap: qmark | shift + tap: excl
SIMPLE_MORPH(qexcl, SFT, &kp QMARK, &kp EXCL)
// Tap: lparens  |  shift + tap: <
SIMPLE_MORPH(lpar_lt, SFT, &kp LPAR, &kp LESS_THAN)
// Tap: lparens  |  shift + tap: <
SIMPLE_MORPH(rpar_gt, SFT, &kp RPAR, &kp GREATER_THAN)

// tap: comma | shift + tap: semicolon | ctrl + shift + tap: <
SIMPLE_MORPH(comma_semi, SFT, &kp COMMA, &comma_inner_morph)
SIMPLE_MORPH(comma_inner_morph, CTL, &kp SEMICOLON, &kp LESS_THAN)

// tap: dot | shift + tap: colon | ctrl + shift + tap: >
SIMPLE_MORPH(dot_colon, SFT, &kp DOT, &dot_inner_morph)
SIMPLE_MORPH(dot_inner_morph, CTL, &kp COLON, &kp GREATER_THAN)


// Define "behaviors" for HRM chord
ZMK_BEHAVIOR(tab, tap_dance,
    tapping-term-ms = <0>;
    bindings = <&kp TAB>;
)

ZMK_BEHAVIOR(esc, tap_dance,
    tapping-term-ms = <0>;
    bindings = <&kp ESC>;
)

ZMK_BEHAVIOR(nav_num, tap_dance,
    tapping-term-ms = <250>;
    bindings = <&mo NAV>, <&sl SP>, <&sl MV>;
)

ZMK_TAP_DANCE(capsdance,
    tapping-term-ms = <QUICK_TAP_MS>;
    bindings = <&kp LSHIFT>, <&kp CAPSLOCK>;
)

// for some reason this seems to be order dependent
ZMK_CONDITIONAL_LAYER(util, NAV NUM, UTIL)
ZMK_CONDITIONAL_LAYER(util, NUM NAV, UTIL)
